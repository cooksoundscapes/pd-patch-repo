#N canvas 456 287 577 510 12;
#N canvas 56 36 754 770 fft-analysis 0;
#X obj 56 522 *~;
#X obj 23 522 *~;
#X obj 23 544 -~;
#X obj 172 520 *~;
#X obj 141 520 *~;
#X obj 141 542 +~;
#X obj 114 238 *~;
#X obj 83 238 *~;
#X obj 55 238 *~;
#X obj 24 238 *~;
#X obj 24 263 +~;
#X obj 128 430 *~;
#X obj 24 667 *~;
#X obj 239 475 rfft~;
#X obj 123 206 rfft~;
#X obj 23 609 rifft~;
#X obj 25 691 outlet~;
#X obj 98 430 *~;
#X obj 98 452 +~;
#X obj 129 263 -~;
#X obj 23 476 *~;
#X obj 56 477 *~;
#X obj 370 688 block~;
#X obj 24 394 +~ 1e-15;
#X obj 23 643 *~;
#X obj 56 643 tabreceive~ \$0-hann;
#X obj 127 691 expr 2/(3*$f1);
#X msg 370 663 set \$1 4;
#X obj 98 476 q8_rsqrt~;
#N canvas 162 88 970 549 read-windows 0;
#X obj 115 368 *~;
#X obj 294 370 *~;
#X obj 115 232 line~;
#X obj 283 107 / 1000;
#X obj 245 107 *;
#X text 330 107 reading location (samples);
#X obj 133 275 / 4;
#X floatatom 438 256 7 0 0 0 - - - 0;
#X obj 558 138 * 0.01;
#X obj 558 162 + 69;
#X obj 558 187 mtof;
#X obj 558 212 / 440;
#X obj 115 394 outlet~;
#X obj 294 395 outlet~;
#X obj 312 339 tabreceive~ \$0-hann;
#X text 496 254 stretched window size (samples), f 16;
#X obj 283 83 r \$0-insamprate;
#X obj 283 133 / 2;
#X obj 245 133 -;
#X text 310 132 back up 1/2 window;
#X obj 115 301 -~;
#X obj 479 467 * -0.5;
#X text 14 264 "back" window 1/4 cycle behind "front" one, f 12;
#X obj 479 413 /;
#X obj 479 441 * 1000;
#X obj 479 389 t f b;
#X obj 511 413 samplerate~;
#X obj 479 366 f;
#X obj 115 150 f;
#X obj 115 121 b;
#X msg 115 204 0 \, \$1 \$2;
#X text 677 21 if location changes \, update number box in main window via "location-set" \, but taking care to limit frequency of updates., f 38;
#X text 508 338 "rewind" control takes us to a location depending on stretched window size., f 25;
#X obj 115 177 pack f f;
#X obj 479 313 r \$0rewind;
#X obj 680 91 r \$0-see-loc;
#X obj 438 205 r \$0-window-size;
#X obj 468 48 switch~;
#X obj 468 19 r \$0play;
#X obj 680 145 s \$0-show-location;
#X obj 479 492 s \$0location;
#N canvas 458 221 450 300 slowstream 0;
#X obj 207 77 t b f;
#X obj 221 194 f;
#X obj 149 108 int;
#X obj 149 140 sel 0;
#X msg 208 111 1;
#X msg 208 134 0;
#X obj 149 165 del 40;
#X obj 221 219 outlet;
#X obj 216 34 inlet;
#X connect 0 0 2 0;
#X connect 0 1 1 1;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 2 1;
#X connect 5 0 2 1;
#X connect 6 0 5 0;
#X connect 6 0 1 0;
#X connect 8 0 0 0;
#X restore 680 117 pd slowstream;
#N canvas 458 221 514 308 window-in-msec 0;
#X obj 38 79 /;
#X obj 38 104 * 1000;
#X floatatom 37 126 5 0 0 0 - - - 0;
#X obj 38 55 t f b;
#X obj 70 79 samplerate~;
#X obj 37 151 / 4;
#X text 175 32 Read two windows out of the recorded sample \, one 1/4 ahead of the other. The mid point of the front window is specified by "location". If "speed" is nonzero \, "location" automatically precesses., f 45;
#X text 68 151 computation period (msec) for overlap of 4;
#X text 90 125 msec in a window;
#X obj 38 31 r \$0-window-size;
#X obj 37 176 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 3 1 4 0;
#X connect 4 0 0 1;
#X connect 5 0 10 0;
#X connect 9 0 3 0;
#X restore 168 24 pd window-in-msec;
#N canvas 458 221 450 300 playhead 0;
#X obj 46 121 f;
#X obj 46 33 bang~;
#X obj 88 123 +;
#X obj 141 55 * 0.01;
#X obj 141 30 r \$0speed;
#X obj 88 218 s \$0-see-loc;
#X obj 173 139 r \$0-samp-msec;
#X obj 64 95 r \$0location;
#X obj 178 103 mul;
#X obj 46 257 outlet;
#X obj 220 56 inlet;
#X obj 258 165 r \$0start;
#X obj 344 165 r \$0end;
#X text 273 12 loop to process the location according to the "speed" parameter., f 22;
#X obj 88 192 expr max( $f3 \, fmod($f1 \, $f2 - $f4) );
#X connect 0 0 2 0;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 2 0 14 0;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 6 0 14 1;
#X connect 7 0 0 1;
#X connect 8 0 2 1;
#X connect 10 0 8 1;
#X connect 11 0 14 2;
#X connect 12 0 14 3;
#X connect 14 0 0 1;
#X connect 14 0 5 0;
#X restore 245 57 pd playhead;
#X obj 438 232 mul;
#X obj 558 114 r \$0transpose;
#X obj 115 332 tabread4~ \$1;
#X obj 293 312 tabread4~ \$1;
#X connect 0 0 12 0;
#X connect 1 0 13 0;
#X connect 2 0 20 0;
#X connect 2 0 47 0;
#X connect 3 0 4 1;
#X connect 4 0 18 0;
#X connect 6 0 20 1;
#X connect 7 0 6 0;
#X connect 7 0 17 0;
#X connect 7 0 27 1;
#X connect 7 0 28 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 44 1;
#X connect 14 0 1 1;
#X connect 14 0 0 1;
#X connect 16 0 3 0;
#X connect 17 0 18 1;
#X connect 18 0 29 0;
#X connect 18 0 46 1;
#X connect 18 0 47 1;
#X connect 20 0 46 0;
#X connect 21 0 40 0;
#X connect 23 0 24 0;
#X connect 24 0 21 0;
#X connect 25 0 23 0;
#X connect 25 1 26 0;
#X connect 26 0 23 1;
#X connect 27 0 25 0;
#X connect 28 0 33 0;
#X connect 29 0 28 0;
#X connect 30 0 2 0;
#X connect 33 0 30 0;
#X connect 34 0 27 0;
#X connect 35 0 41 0;
#X connect 36 0 44 0;
#X connect 38 0 37 0;
#X connect 41 0 39 0;
#X connect 42 0 33 1;
#X connect 42 0 43 0;
#X connect 43 0 4 0;
#X connect 44 0 7 0;
#X connect 45 0 8 0;
#X connect 46 0 0 0;
#X connect 47 0 1 0;
#X restore 123 178 pd read-windows;
#X text 277 50 recall previous output amplitude. Its phase will be added to the phase difference we measure from two windows in the the recorded sound.;
#X obj 126 114 *~;
#X obj 99 114 *~;
#X obj 99 136 +~;
#X obj 164 139 q8_rsqrt~;
#X obj 164 116 +~ 1e-20;
#X obj 83 164 *~;
#X obj 24 163 *~;
#X obj 34 290 lrshift~ 1;
#X obj 29 314 lrshift~ -1;
#X obj 146 290 lrshift~ 1;
#X obj 138 314 lrshift~ -1;
#X obj 42 345 *~;
#X obj 164 357 *~;
#X obj 24 370 +~;
#X obj 130 357 +~;
#X text 252 111 divide by the magnitude to make a unit-magnitude complex amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~ is reciprocal square root.;
#X text 252 210 Take FT of the window in back. Multiply its conjugate by the normalized previous output. The result has the magnitude of the input sound and phase (previous output phase) minus (back window phase).;
#X text 254 415 Normalize again \, this time taking care to salt each channel with 1e-15 so that we get a unit complex number even if everything was zero heretofore.;
#X text 295 474 Now take the FT of the forward window and multiply it by the unit complex number from above. The magnitude will be that of the forward window and the phase will be the previous output phase plus the phase difference between the two analysis windows -- except that if "lock" is on \, they will be modified to agree progressively better with the inter-channel phase relationships of the input.;
#X text 254 287 If "lock" is on \, encourage neighboring channels to stay in phase by adding the two neighboring complex amplitudes. The result will tend toward the channel with the strongest amplitude. If the phase relationships between channels in the output and those in the input are in parallel \, then neighboring channels of the quotient will all have the same phase and this will not change any phases. (lrshift shifts the signal to the left or right depending on its argument.);
#X text 264 171 Read two windows \, one 1/4 length behind the other \, of the input sound \, with Hann window function (see inside).;
#X text 341 602 'set' message to block allows variable size, f 22;
#X obj 25 50 tabreceive~ \$0-prev-real;
#X obj 83 74 tabreceive~ \$0-prev-imag;
#X obj 141 576 tabsend~ \$0-prev-imag;
#X obj 140 610 tabsend~ \$0-prev-real;
#X obj 182 335 r \$0lock;
#X obj 370 639 r \$0-window-size;
#X obj 127 667 r \$0-window-size;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 56 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 55 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 39 0;
#X connect 10 0 38 0;
#X connect 10 0 44 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 24 0;
#X connect 17 0 18 0;
#X connect 18 0 28 0;
#X connect 19 0 40 0;
#X connect 19 0 41 0;
#X connect 19 0 45 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 23 0 17 1;
#X connect 23 0 17 0;
#X connect 23 0 20 0;
#X connect 24 0 12 0;
#X connect 25 0 24 1;
#X connect 26 0 12 1;
#X connect 27 0 22 0;
#X connect 28 0 20 1;
#X connect 28 0 21 1;
#X connect 29 0 14 0;
#X connect 29 1 13 0;
#X connect 31 0 33 1;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 34 0 36 1;
#X connect 34 0 37 1;
#X connect 35 0 34 0;
#X connect 36 0 8 0;
#X connect 36 0 7 0;
#X connect 37 0 9 0;
#X connect 37 0 6 0;
#X connect 38 0 42 0;
#X connect 39 0 42 0;
#X connect 40 0 43 0;
#X connect 41 0 43 0;
#X connect 42 0 44 1;
#X connect 43 0 45 1;
#X connect 44 0 23 0;
#X connect 45 0 11 0;
#X connect 45 0 11 1;
#X connect 45 0 21 0;
#X connect 53 0 32 1;
#X connect 53 0 32 0;
#X connect 53 0 37 0;
#X connect 54 0 31 1;
#X connect 54 0 31 0;
#X connect 54 0 36 0;
#X connect 57 0 42 1;
#X connect 57 0 43 1;
#X connect 58 0 27 0;
#X connect 59 0 26 0;
#X restore 43 162 pd fft-analysis;
#X floatatom 221 347 5 0 0 1 c - - 0;
#X floatatom 33 298 5 0 0 1 % - - 0;
#X floatatom 117 297 7 0 0 1 ms - - 0;
#N canvas 673 36 531 738 phase-tables 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1 0 0;
#X restore 67 395 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1 0 0;
#X restore 67 40 graph;
#X restore 243 129 pd phase-tables;
#N canvas 390 135 503 484 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 114 349 graph;
#X obj 331 168 osc~;
#X obj 331 193 *~ -0.5;
#X obj 331 217 +~ 0.5;
#X obj 314 260 tabwrite~ \$0-hann;
#X obj 161 221 /;
#X obj 179 189 samplerate~;
#X obj 42 249 swap;
#X obj 42 273 /;
#X obj 172 249 * 1000;
#X obj 90 132 t f b f;
#X msg 179 139 resize \$1;
#X obj 179 163 s \$0-hann;
#X msg 356 138 0;
#X obj 283 134 t f b;
#X text 60 24 calculate Hann window table (variable window size) and constants window-hz (fundamental frequency of analysis) \, window-sec and window-msec (analysis window size in seconds and msec)., f 56;
#X obj 283 106 r \$0-window-hz;
#X obj 42 297 s \$0-window-hz;
#X obj 172 276 s \$0-window-msec;
#X obj 161 302 s \$0-window-sec;
#X obj 90 97 r \$0-window-size;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 9 0;
#X connect 5 0 19 0;
#X connect 6 0 5 1;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 17 0;
#X connect 9 0 18 0;
#X connect 10 0 5 0;
#X connect 10 0 7 0;
#X connect 10 1 6 0;
#X connect 10 2 11 0;
#X connect 11 0 12 0;
#X connect 13 0 1 1;
#X connect 14 0 1 0;
#X connect 14 1 4 0;
#X connect 14 1 13 0;
#X connect 16 0 14 0;
#X connect 20 0 10 0;
#X restore 243 153 pd hann-window;
#X obj 330 302 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000 0 1;
#X obj 221 301 bng 15 250 50 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000;
#X obj 43 187 outlet~;
#X obj 43 88 inlet;
#X obj 43 113 broadcast \$0;
#X obj 33 322 s \$0speed;
#X obj 221 322 s \$0rewind;
#X obj 330 322 s \$0lock;
#X obj 367 132 \$0;
#X obj 329 349 hradio 15 1 0 4 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#X obj 329 369 s \$0window;
#X floatatom 416 380 5 0 0 0 - - - 0;
#X obj 416 355 expr pow(2 \, ($f1+9));
#X obj 416 403 s \$0-window-size;
#X obj 416 281 r \$0window;
#X obj 416 306 clip 0 3;
#X obj 121 349 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 121 369 s \$0play;
#X msg 367 157 \; pd dsp 1 \; \$1-window-size 1024 \; \$1transpo 0 \; \$1rewind bang \; \$1speed 100 \; \$1lock 1 \;;
#X obj 416 330 i;
#X obj 117 322 s \$0location;
#X obj 367 113 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 367 89 loadbang;
#X floatatom 122 401 5 0 0 0 - - - 0;
#X obj 122 425 s \$0start;
#X floatatom 200 400 5 0 0 0 - - - 0;
#X obj 200 424 s \$0end;
#N canvas 916 407 450 300 tracking 0;
#X obj 141 32 r \$0-show-location;
#X msg 64 51 set \$1;
#X obj 64 76 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 166 228 pd tracking;
#X obj 221 370 s \$0transpose;
#N canvas 735 353 450 250 (subpatch) 0;
#X text 3 0 core;
#X coords 0 1 100 -1 137 73 1 0 0;
#X restore 27 142 graph;
#N canvas 1104 517 388 403 init 1;
#X obj 81 155 s \$0-samplength;
#X obj 57 245 /;
#X obj 57 270 * 1000;
#X obj 57 295 s \$0-samp-msec;
#X obj 174 295 s \$0-insamprate;
#X obj 57 110 array size \$1;
#X obj 137 39 loadbang;
#X obj 137 64 t b b;
#X msg 227 97 args;
#X obj 227 122 pdcontrol;
#X obj 227 147 route list;
#X msg 227 182 \$2;
#X msg 294 184 48000;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 5 0 0 0;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 7 1 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 1 12 0;
#X connect 11 0 1 1;
#X connect 12 0 4 0;
#X connect 12 0 1 1;
#X restore 244 105 pd init;
#X text 37 19 *patch's core stripped from the Pd help files \; argument1 is sample table! \; arg2 is samp rate \, defaults to 48000;
#X connect 0 0 8 0;
#X connect 1 0 34 0;
#X connect 2 0 11 0;
#X connect 3 0 26 0;
#X connect 6 0 13 0;
#X connect 7 0 12 0;
#X connect 9 0 10 0;
#X connect 14 0 24 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 17 0;
#X connect 20 0 21 0;
#X connect 21 0 25 0;
#X connect 22 0 23 0;
#X connect 25 0 18 0;
#X connect 27 0 14 0;
#X connect 28 0 27 0;
#X connect 29 0 30 0;
#X connect 31 0 32 0;
#X connect 33 0 3 0;
